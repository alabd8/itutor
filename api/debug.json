{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":32538,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:34:54.360Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":32538,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:35:00.117Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":564,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:40:38.940Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":564,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:40:41.567Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":649,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:43:11.036Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":649,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:43:13.096Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":708,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:45:17.923Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":708,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:45:19.980Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1669,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:50:27.461Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1669,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:50:29.550Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1726,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:50:43.610Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1726,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:50:45.134Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2241,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:54:55.446Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2241,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:54:57.537Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2339,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:55:11.377Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2339,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:55:12.952Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2411,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T17:15:57.797Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2411,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T17:16:00.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6414,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:16:42.116Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6414,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:16:48.074Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6509,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:17:56.001Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6509,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:18:00.384Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6591,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:18:34.855Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6591,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:18:39.379Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6678,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:19:12.401Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6678,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:19:16.862Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6822,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:20:47.172Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6822,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:20:51.987Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:21:55.930Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:22:00.399Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6985,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:23:12.654Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6985,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:23:17.409Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7098,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:24:15.891Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7098,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:24:20.614Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7173,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:25:14.979Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7173,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:25:19.682Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7259,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:26:38.225Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7259,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:26:42.613Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7375,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:28:23.125Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7375,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:28:28.207Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7507,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:31:05.418Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7507,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:31:10.210Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7595,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:32:12.824Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7595,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:32:17.263Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8420,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:43:26.808Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8420,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:43:35.803Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8512,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:44:24.878Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8512,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:44:29.228Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13123,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:12:26.213Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13123,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:12:35.203Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13231,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:13:47.418Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13231,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:13:52.400Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13340,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:14:57.333Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13340,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:15:02.132Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13428,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:15:26.131Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13428,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:15:30.497Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13527,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:16:52.268Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13527,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:16:57.028Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13612,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:17:26.243Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13612,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:17:30.635Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13705,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:18:05.435Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13705,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:18:09.731Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13779,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:18:25.653Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13779,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:18:30.314Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13857,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:19:01.084Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13857,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:19:05.398Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13940,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:19:33.547Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13940,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:19:38.110Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14009,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:19:58.237Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14009,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:20:02.864Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15802,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:45:26.186Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15802,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:45:34.751Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15960,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:47:03.978Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15960,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:47:11.233Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16067,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T16:48:07.283Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16067,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T16:48:12.172Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4609,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T17:50:57.762Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4770,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T17:53:18.120Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4770,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T17:53:20.969Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5256,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T18:01:23.157Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5256,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T18:01:27.601Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27602,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-31T15:19:35.206Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27602,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-31T15:19:45.137Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":3231,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-01T06:39:03.025Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":3231,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-01T06:39:06.905Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5780,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T05:46:28.243Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5966,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T05:50:05.403Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5966,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T05:50:09.140Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7338,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T10:47:05.666Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7338,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T10:47:09.845Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8931,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:21:39.557Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8931,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:21:44.458Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9122,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:26:58.107Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9122,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:27:02.421Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9213,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:28:07.887Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9213,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:28:11.643Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9302,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:29:17.029Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9302,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:29:21.092Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9419,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:30:08.688Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9419,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:30:12.478Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9542,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T12:32:19.911Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9542,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T12:32:24.384Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10088,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T13:21:10.924Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10088,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T13:21:15.254Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10230,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T13:23:57.883Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10230,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T13:24:02.266Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11161,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T13:42:00.724Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11161,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T13:42:04.667Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11266,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T13:43:50.826Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11266,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T13:43:54.933Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11375,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T13:45:16.453Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11375,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T13:45:20.638Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12269,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:19:30.538Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12269,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:19:36.797Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12424,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:23:46.286Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12424,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:23:52.174Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12562,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:25:37.201Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12562,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:25:42.042Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12925,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:37:06.137Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12925,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:37:11.085Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13021,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:38:20.708Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13021,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:38:25.117Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13264,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T14:44:27.184Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13264,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T14:44:33.179Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14408,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:35:34.100Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14408,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:35:38.835Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14496,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:36:45.614Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14496,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:36:50.050Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14621,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:38:17.610Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14621,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:38:22.581Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14739,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:41:15.213Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14739,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:41:20.446Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14841,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:43:31.575Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14841,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:43:35.926Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14962,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:46:39.101Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14962,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:46:44.037Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15045,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T16:47:04.365Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15045,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T16:47:08.716Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15766,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:09:15.415Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15766,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:09:22.814Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15908,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:12:43.581Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15908,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:12:48.443Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16052,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:14:53.418Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16052,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:14:58.188Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16186,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:16:19.382Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16186,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:16:23.704Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16262,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:16:50.250Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16262,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:16:54.927Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16357,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:17:35.338Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16357,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:17:39.675Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16544,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:19:51.750Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16544,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:19:56.584Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16695,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:22:14.385Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16695,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:22:19.361Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16812,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:23:32.087Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":16812,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:23:36.754Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17268,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:29:52.458Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17268,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:29:57.275Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:32:51.368Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17439,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:32:56.176Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17539,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:33:17.856Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17539,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:33:22.186Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17691,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:36:24.594Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17691,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:36:29.673Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17796,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:37:35.424Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17796,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:37:40.120Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17907,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:38:53.811Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":17907,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:38:58.760Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18015,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:40:21.852Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18015,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:40:26.213Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18164,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:43:32.304Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18164,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:43:37.690Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18262,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:45:54.219Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18262,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:45:59.307Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18544,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:53:44.564Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18544,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:53:49.725Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18660,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:55:50.629Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18660,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:55:55.379Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18758,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:57:59.996Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18758,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:58:04.707Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18865,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T17:59:36.773Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18865,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T17:59:41.386Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18963,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:01:45.880Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":18963,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:01:51.625Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19089,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:04:06.868Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19089,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:04:14.075Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19176,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:04:43.271Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19176,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:04:47.753Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19566,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:11:41.952Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19566,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:11:47.701Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19679,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:13:21.781Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19679,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:13:26.605Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19825,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-02T18:15:11.785Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":19825,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-02T18:15:16.583Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4464,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T15:47:03.222Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4464,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T15:47:10.911Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4764,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T15:53:25.986Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4764,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T15:53:30.825Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4998,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:01:28.008Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":4998,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:01:33.055Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5086,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:03:21.500Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5086,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:03:26.296Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5158,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:03:46.418Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5158,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:03:50.669Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5429,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:08:10.121Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5429,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:08:14.946Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5581,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:11:13.888Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5581,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:11:19.614Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5767,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:14:06.808Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5767,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:14:11.470Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6010,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:16:54.329Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6010,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:16:59.426Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6256,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:19:51.570Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6256,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:19:56.181Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6370,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:21:47.686Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6370,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:21:52.309Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6459,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:22:20.242Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6459,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:22:24.464Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6540,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:22:50.007Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6540,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:22:54.576Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6681,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:23:57.578Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6681,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:24:02.254Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6804,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:24:42.348Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6804,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:24:46.702Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6901,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:26:10.183Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6901,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:26:14.975Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7127,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:31:50.506Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7127,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:31:55.371Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7235,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:33:16.040Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7235,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:33:20.366Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7476,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:40:24.523Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7476,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:40:29.438Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7605,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:41:33.135Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7605,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:41:37.633Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7775,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:42:47.927Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7775,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:42:52.760Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7878,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:43:47.949Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7878,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:43:53.101Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7975,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:44:40.057Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7975,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:44:44.801Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8080,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:46:29.869Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8080,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:46:34.674Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8204,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:48:19.725Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8204,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:48:24.455Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8304,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:49:58.194Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8304,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:50:03.065Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8423,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:51:16.092Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8423,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:51:20.677Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8516,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:52:36.522Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8516,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:52:41.068Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8594,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:53:14.631Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8594,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:53:19.060Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8696,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:55:09.081Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8696,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:55:14.057Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8785,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T16:56:16.228Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8785,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T16:56:20.621Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9082,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:08:16.491Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9082,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:08:26.168Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9172,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:09:24.985Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9172,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:09:29.458Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9578,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:21:08.353Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9578,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:21:14.595Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9632,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:21:23.588Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9632,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:21:27.650Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9745,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:22:53.468Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9745,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:22:57.879Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10282,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:42:42.042Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10282,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:42:47.990Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10386,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:43:45.225Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10386,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:43:50.318Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10561,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:47:38.163Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10561,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:47:42.544Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10652,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:48:35.668Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10652,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:48:39.813Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10757,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:49:44.201Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10757,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:49:52.357Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10852,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:50:32.244Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10852,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:50:36.732Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10932,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:51:13.768Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10932,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:51:18.837Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11012,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:51:54.299Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11012,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:51:59.283Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11085,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:52:27.257Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11085,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:52:32.248Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11175,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:53:09.570Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11175,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:53:14.646Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:55:49.199Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11377,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:55:56.831Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11476,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:56:53.174Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11476,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:56:58.284Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11629,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T17:58:41.453Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11629,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T17:58:47.368Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11795,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:03:08.058Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11795,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:03:18.140Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12396,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:11:32.527Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12396,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:11:41.081Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12456,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:12:28.110Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12456,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:12:32.180Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12542,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:13:16.069Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12542,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:13:21.638Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12623,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:14:01.224Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12623,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:14:05.983Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12716,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:14:43.447Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12716,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:14:48.066Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12908,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:17:17.295Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12908,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:17:25.762Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13033,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:19:28.560Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13033,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:19:33.663Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13437,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:35:19.476Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13437,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:35:23.962Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13580,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:37:55.287Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13580,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:38:02.055Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13695,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:39:06.476Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13695,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:39:10.656Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13987,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T18:43:39.130Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13987,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T18:43:44.072Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14785,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T19:20:27.378Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14785,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T19:20:32.226Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15005,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T19:27:12.174Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15005,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T19:27:19.468Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15207,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T19:31:39.690Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15207,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T19:31:44.695Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15311,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-03T19:34:10.843Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":15311,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-03T19:34:14.731Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5244,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T11:40:06.895Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5244,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T11:40:14.471Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6321,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T11:58:30.424Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6321,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T11:58:38.133Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5412,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:03:01.432Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5412,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:03:09.363Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6606,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:39:25.849Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6606,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:39:35.138Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6805,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:43:44.408Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6805,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:43:51.171Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6924,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:45:40.328Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6924,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:45:46.185Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7050,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:47:05.283Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7050,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:47:12.298Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7203,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:48:30.798Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7203,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:48:36.172Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7266,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T15:48:51.988Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7266,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T15:48:55.597Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8260,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:19:31.564Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8260,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:19:40.859Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8376,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:21:32.646Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8376,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:21:38.531Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8464,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:22:49.828Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8464,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:22:54.679Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8615,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:25:18.581Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8615,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:25:23.318Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8757,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:26:48.453Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8757,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:26:53.771Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8850,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:27:39.029Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8850,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:27:48.326Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8936,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:28:21.291Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8936,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:28:25.759Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9034,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:29:10.258Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9034,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:29:14.823Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9185,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:32:00.981Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9185,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:32:06.213Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9655,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:42:49.780Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9655,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:42:54.908Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9749,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:43:52.831Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9749,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:43:57.791Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9860,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:45:24.604Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9860,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:45:30.664Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9962,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:46:24.538Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9962,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:46:29.055Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10106,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:48:29.979Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10106,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:48:35.910Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10210,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:49:34.028Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10210,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:49:39.154Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10314,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:50:59.261Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10314,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:51:04.615Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10395,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:51:32.256Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10395,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:51:36.497Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10480,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:52:07.480Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10480,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:52:12.677Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10715,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:55:26.606Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10715,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:55:31.440Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10873,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:58:08.671Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10873,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:58:14.301Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11001,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T16:59:34.625Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11001,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T16:59:39.298Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11082,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:00:43.274Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11082,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:00:48.320Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11196,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:02:09.249Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11196,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:02:13.818Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11331,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:04:48.470Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11331,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:04:54.203Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11430,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:06:17.680Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11430,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:06:22.577Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11640,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:08:49.530Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11640,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:08:54.847Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11749,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:10:34.309Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11749,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:10:38.808Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11903,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:12:48.197Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11903,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:12:53.041Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12078,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:15:16.917Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12078,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:15:24.191Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12220,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:18:16.674Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12220,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:18:20.458Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12383,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:22:06.597Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12383,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:22:10.920Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12837,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:35:51.600Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12837,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:35:56.762Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13054,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T17:42:26.793Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13054,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T17:42:31.197Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14099,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T18:16:41.109Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14099,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T18:16:51.501Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14453,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-04T18:23:30.982Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14453,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-04T18:23:36.090Z","v":0}
