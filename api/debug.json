{"name":"itutor-app-debug","hostname":"8codingeek","pid":8877,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T10:32:17.901Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8877,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T10:32:22.626Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9031,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T10:36:04.585Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9031,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T10:36:08.042Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9694,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T10:47:57.083Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9694,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T10:48:06.576Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T11:15:10.815Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12377,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T11:15:20.415Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15518,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:38:19.298Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15518,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:38:23.548Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15636,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:40:39.669Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15636,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:40:42.953Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15756,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:42:39.985Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15756,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:42:43.498Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15844,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:43:40.601Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15844,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:43:43.833Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16087,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:50:09.234Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16087,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:50:12.796Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16168,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:51:00.240Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16168,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:51:03.513Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16304,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:53:28.471Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16304,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:53:32.233Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16447,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:56:38.710Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16447,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:56:41.408Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16526,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:57:43.137Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16526,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:57:46.523Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16620,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T12:58:58.692Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16620,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T12:59:02.627Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16714,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:00:33.659Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16714,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:00:37.544Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16809,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:01:37.968Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16809,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:01:41.919Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17364,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:06:27.684Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17364,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:06:31.495Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17465,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:07:38.771Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17465,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:07:41.482Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17586,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:09:57.164Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17586,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:10:00.579Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17667,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:10:30.910Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17667,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:10:34.092Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17777,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:11:39.963Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17777,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:11:43.165Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17867,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:12:31.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17867,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:12:34.351Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17942,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:12:56.270Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17942,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:12:59.439Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18063,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:16:03.107Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18063,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:16:06.292Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18209,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:17:57.653Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18209,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:18:01.084Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18301,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:19:24.744Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18301,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:19:28.045Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18395,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:20:16.604Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18395,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:20:20.249Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18471,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:20:45.373Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18471,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:20:48.641Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18540,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:21:05.417Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18540,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:21:08.724Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18612,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:21:29.829Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18612,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:21:33.128Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18684,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:21:57.238Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18684,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:22:00.704Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18848,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:23:40.193Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18848,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:23:43.790Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18950,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:24:57.015Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18950,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:25:00.716Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19074,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:26:47.015Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19074,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:26:56.206Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19144,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:27:33.460Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19144,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:27:37.072Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19261,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:29:08.114Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19261,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:29:11.428Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19426,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:32:18.433Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19426,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:32:21.917Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19523,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:33:30.903Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19523,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:33:34.234Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19790,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:39:01.034Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19790,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:39:05.246Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19870,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:39:35.410Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19870,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:39:38.676Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19945,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:40:00.466Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19945,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:40:03.679Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20060,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:41:29.556Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20060,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:41:37.548Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21012,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:54:08.778Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21012,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:54:16.417Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21150,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T13:55:53.342Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21150,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T13:55:56.755Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21403,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T14:00:18.628Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21403,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T14:00:22.348Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21524,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T14:04:53.096Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21524,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T14:04:55.976Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21620,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-21T14:05:43.383Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21620,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-21T14:05:47.226Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4318,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:35:50.380Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4318,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:36:07.429Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4957,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:38:13.775Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4957,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:38:20.292Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5034,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:39:13.805Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5034,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:39:17.030Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6614,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:57:54.126Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6614,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:58:02.028Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6714,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:59:13.248Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6714,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:59:16.731Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6800,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T08:59:56.084Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6800,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T08:59:59.527Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6944,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:01:12.563Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6944,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:01:16.130Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7177,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:05:18.196Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7177,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:05:24.357Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7889,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:12:53.510Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7889,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:12:57.004Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8022,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:14:58.125Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8022,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:15:01.674Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8135,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:16:32.464Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8135,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:16:36.156Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8292,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-22T09:18:48.651Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8292,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-22T09:18:52.015Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6191,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T10:46:48.400Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6191,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T10:46:55.108Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6707,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T10:53:06.785Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6707,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T10:53:10.230Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7045,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T11:01:09.576Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7045,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T11:01:12.961Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7320,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T11:05:08.637Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7320,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T11:05:12.298Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8138,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:19:32.832Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8138,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:19:36.791Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8231,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:20:10.749Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8231,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:20:14.058Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8317,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:20:51.270Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8317,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:20:55.028Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:22:39.960Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8439,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:22:43.440Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8652,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:28:19.473Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8652,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:28:22.885Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8813,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:31:11.397Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8813,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:31:16.217Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9465,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:38:27.592Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9465,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:38:34.444Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9751,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:45:19.480Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9751,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:45:23.341Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9953,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:47:40.608Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9953,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:47:45.560Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10255,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:52:03.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10255,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:52:07.448Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10422,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T12:55:00.842Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10422,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T12:55:04.473Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11023,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:01:14.650Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11023,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:01:23.526Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11088,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:01:47.113Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11088,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:01:50.490Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11692,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:19:16.526Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11692,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:19:20.976Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12186,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:25:06.791Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12186,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:25:10.104Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12286,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:25:42.903Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12286,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:25:46.269Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12373,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:26:16.479Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12373,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:26:19.893Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12506,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:29:36.845Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12506,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:29:40.332Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12632,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:31:56.926Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12632,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:32:00.212Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12804,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-23T13:34:01.270Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12804,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-23T13:34:04.944Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18848,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T08:08:35.918Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18848,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T08:08:45.762Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3790,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:01:51.206Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3790,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:02:21.103Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4269,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:08:29.529Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4269,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:08:34.438Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:09:40.581Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4377,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:09:44.730Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4491,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:11:10.820Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4491,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:11:15.237Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4572,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:11:50.299Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4572,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:11:54.073Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5023,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:15:15.043Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5023,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:15:20.300Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5106,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:15:51.462Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5106,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:15:55.387Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5331,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:18:45.929Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5331,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:18:50.685Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5473,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:20:21.645Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5473,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:20:25.926Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5687,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:25:52.000Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5687,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:25:55.953Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5765,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T10:27:24.224Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5765,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T10:27:27.198Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8792,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T11:27:46.345Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8792,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T11:27:52.091Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8933,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T11:30:15.515Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8933,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T11:30:18.883Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9049,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T11:32:05.421Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9049,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T11:32:08.777Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9366,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-24T11:40:25.405Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9366,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-24T11:40:29.129Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11292,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:30:56.892Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11292,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:31:00.280Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11693,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:34:43.078Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11693,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:34:47.030Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11828,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:36:49.822Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11828,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:36:53.526Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12073,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:53:55.850Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12073,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:54:02.032Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12242,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:56:51.285Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12242,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:56:55.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12327,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:57:43.626Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12327,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:57:47.252Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12407,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:58:22.806Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12407,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:58:26.847Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12496,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:58:57.476Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12496,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:59:00.947Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12574,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T13:59:46.084Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12574,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T13:59:49.689Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12763,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:02:47.446Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12763,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:02:51.101Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13076,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:07:55.156Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13076,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:07:58.779Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13147,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:08:30.164Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13147,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:08:33.877Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13269,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:09:34.281Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13269,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:09:38.216Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13356,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:10:00.810Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13356,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:10:04.365Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13457,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:11:34.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13457,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:11:38.047Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13568,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:12:59.215Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13568,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:13:02.490Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13774,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:15:23.213Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13774,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:15:26.957Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14466,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:27:25.591Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14466,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:27:32.913Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14549,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:28:15.185Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14549,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:28:18.854Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14944,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-25T14:37:08.860Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14944,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        createFieldsForTutor: [Array],\n        createFieldsForLC: [Array],\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ] ] }","time":"2019-02-25T14:37:13.286Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9857,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T12:36:37.227Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9857,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T12:36:50.874Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12119,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T12:46:28.332Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12119,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T12:46:31.846Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14898,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:00:48.089Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14898,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:00:51.660Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16997,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:18:22.675Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16997,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:18:26.566Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17231,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:22:34.551Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17231,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:22:39.843Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17356,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:24:42.099Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17356,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:24:46.772Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18171,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:31:09.835Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18171,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:31:17.733Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18303,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:34:29.143Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18303,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:34:32.423Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18397,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:35:45.374Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18397,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:35:48.733Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18527,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:37:04.558Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18527,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:37:08.155Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18597,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:37:35.283Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18597,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:37:38.880Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18723,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:38:40.230Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18723,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:38:43.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18807,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T13:39:30.289Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18807,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T13:39:33.570Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19390,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-26T14:06:40.503Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19390,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-26T14:06:44.951Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3988,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:23:11.497Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3988,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:23:18.104Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4656,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:31:39.727Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4656,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:31:43.964Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4869,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:39:00.424Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4869,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:39:04.116Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4944,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:39:50.960Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4944,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:39:54.505Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5028,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:40:37.753Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5028,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:40:41.096Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5786,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:51:37.600Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5786,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:51:42.812Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5861,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T10:52:41.558Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5861,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T10:52:46.729Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6742,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T11:19:15.772Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6742,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     auxiliary: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'auxiliary',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     auxiliary: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T11:19:26.311Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9513,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T12:59:12.351Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9513,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T12:59:18.857Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10230,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:13:57.118Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10230,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:14:04.232Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10798,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:19:51.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10798,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:20:00.969Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11002,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:25:31.607Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11002,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:25:37.261Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11225,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:28:00.603Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11225,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:28:06.159Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11359,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:30:46.267Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11359,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:30:52.454Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11572,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:33:47.114Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11572,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:33:52.268Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11668,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:34:33.011Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11668,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:34:38.555Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11837,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:36:39.305Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11837,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:36:49.424Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12821,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:50:19.126Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12821,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:50:34.697Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12974,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T13:51:56.804Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12974,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T13:52:02.576Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13744,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:03:16.742Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13744,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: [Object],\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true,\n        _requiredpaths: [Array],\n        _indexedpaths: [Array] },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:04:37.141Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13942,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:05:23.323Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13942,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:05:40.081Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14911,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:15:42.647Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14911,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:16:19.054Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15527,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:23:43.679Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15527,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:23:48.985Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15669,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:25:34.128Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15669,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:25:39.575Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15741,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:26:01.493Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15741,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:26:06.610Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15863,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:30:35.422Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15863,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:30:40.418Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15985,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:32:35.870Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15985,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:32:41.332Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16077,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:33:28.111Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16077,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:33:33.268Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16144,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:33:57.010Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16144,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:34:02.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16305,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:35:37.439Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16305,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:35:42.745Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16723,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:39:13.161Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16723,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:39:19.276Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16923,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:42:04.896Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16923,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:42:10.238Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17089,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:45:19.242Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17089,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:45:25.086Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17240,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:48:02.753Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17240,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:48:08.946Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17327,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:48:31.700Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17327,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFieldsForUser: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:48:37.450Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17477,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:51:34.354Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17477,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:51:40.685Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17578,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:53:31.917Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17578,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:53:36.931Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17691,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T14:57:06.662Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17691,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T14:57:11.489Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18055,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:07:04.194Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18055,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:07:13.489Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18148,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:07:54.706Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18148,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:08:00.394Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18249,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:08:48.508Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18249,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:08:54.470Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18314,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:09:20.006Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18314,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:09:25.601Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18430,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:10:06.446Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18430,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:10:11.633Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18505,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:10:36.578Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18505,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:10:41.979Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18583,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:11:08.101Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18583,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:11:13.522Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18655,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:11:37.440Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18655,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:11:42.805Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18792,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-27T15:12:49.722Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18792,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-27T15:12:55.507Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3118,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T11:45:31.742Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3118,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T11:46:23.532Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3945,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:28:46.557Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3945,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:28:57.928Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4443,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:33:20.910Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4443,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:33:26.011Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4523,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:34:41.393Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4523,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:34:46.297Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4636,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:37:01.747Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4636,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:37:06.790Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4808,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:40:22.494Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4808,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:40:28.508Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4916,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:44:11.787Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4916,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:44:17.463Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5028,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T12:46:13.232Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5028,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T12:46:18.696Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8731,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T15:36:10.760Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8731,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T15:36:24.845Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10339,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:37:34.215Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10339,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:37:44.958Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10575,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:47:29.131Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10575,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:47:34.486Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10653,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:48:55.184Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10653,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: [Object],\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true,\n        _requiredpaths: [Array],\n        _indexedpaths: [Array] },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:49:05.508Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10749,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:49:58.823Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10749,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:50:04.083Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10990,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:56:32.587Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10990,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:56:38.528Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11137,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T16:58:44.454Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11137,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T16:58:52.307Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11217,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-28T17:00:05.089Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11217,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-28T17:00:11.935Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3476,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T08:27:08.723Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3714,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T08:31:18.140Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3714,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T08:31:29.070Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3941,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T08:38:37.280Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3941,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T08:38:43.322Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3373,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T09:38:01.642Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3373,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T09:38:22.411Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3818,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T09:41:22.932Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3818,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T09:41:28.733Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3322,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T09:59:38.009Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3322,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T09:59:53.778Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3910,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T10:10:31.058Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3910,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T10:10:37.383Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4447,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T13:50:19.636Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4447,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T13:50:24.471Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T14:52:02.979Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3377,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T14:52:13.338Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4556,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:03:52.035Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4556,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:03:59.692Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4658,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:05:51.535Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4658,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:05:56.138Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4745,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:07:11.884Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4745,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:07:16.004Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4827,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:07:50.953Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4827,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:07:56.132Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4956,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:09:21.159Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4956,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:09:25.624Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5087,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:11:28.068Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5087,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:11:32.495Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5169,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:12:28.468Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5169,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:12:32.530Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5251,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:13:21.173Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5251,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:13:25.654Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5403,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:18:15.070Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5403,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:18:19.532Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5476,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:18:54.366Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5476,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:18:58.548Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5584,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:24:13.852Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5584,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:24:21.304Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5891,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:32:07.056Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5891,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:32:12.238Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5968,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:33:23.007Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5968,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:33:27.606Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6218,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:34:59.801Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6218,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:35:05.195Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6451,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:36:06.930Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6451,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:36:11.749Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6541,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:36:42.995Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6541,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:36:48.389Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7048,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:49:21.068Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7048,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:49:26.569Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7176,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T15:52:32.013Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7176,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T15:52:37.847Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7501,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T16:14:34.244Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7501,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T16:14:39.492Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7598,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T16:15:37.724Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7598,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T16:15:42.232Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7660,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T16:16:07.503Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7660,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T16:16:12.256Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7737,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T16:16:38.772Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7737,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T16:16:43.180Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7831,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T16:17:31.567Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7831,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T16:17:35.836Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8967,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:02:51.661Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8967,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:03:01.843Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9058,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:04:03.328Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9058,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:04:11.618Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9139,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:04:48.569Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9139,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:04:53.409Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9256,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:06:08.939Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9256,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:06:13.289Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9343,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:07:23.903Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9343,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:07:29.210Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4166,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:22:45.451Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4166,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:22:53.319Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4409,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:29:13.593Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4409,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:29:18.236Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4568,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:32:05.440Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4568,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:32:09.781Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4717,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:35:21.990Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4717,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:35:27.510Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4808,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:36:11.804Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4808,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:36:16.702Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4917,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:38:22.111Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4917,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:38:26.794Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5017,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:41:04.831Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5017,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:41:10.091Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5381,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:48:18.582Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5381,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:48:26.946Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5504,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:50:25.432Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5504,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:50:33.480Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5841,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T17:55:24.722Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5841,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T17:55:32.491Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6038,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:03:14.823Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6038,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:03:20.463Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6193,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:05:04.785Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6193,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:05:09.625Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6263,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:05:55.059Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6263,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:05:59.799Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6364,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:07:59.504Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6364,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:08:04.936Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6464,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:09:55.027Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6464,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:09:59.521Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6661,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:12:09.631Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6661,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:12:14.486Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6754,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:13:30.386Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6754,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:13:34.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6816,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:13:55.335Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6816,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:14:00.062Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6881,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-01T18:14:15.931Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6881,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-01T18:14:21.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5104,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T16:45:48.865Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5104,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T16:45:59.681Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5863,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:07:01.314Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5863,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:07:06.904Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6081,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:10:56.493Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6081,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:11:03.188Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6186,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:12:50.282Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6186,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:12:55.437Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6964,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:41:01.560Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6964,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:41:10.181Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7214,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:53:42.148Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7214,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:53:47.126Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7332,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T17:59:50.791Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7332,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T17:59:57.113Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7631,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T18:04:53.898Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7631,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T18:05:01.146Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7744,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T18:06:27.647Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7744,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T18:06:36.992Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7878,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T18:12:32.219Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7878,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T18:12:37.042Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7993,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-02T18:15:09.100Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7993,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-02T18:15:13.933Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3995,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-03T06:24:23.112Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3995,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'I am smart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-03T06:24:38.196Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4167,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T08:49:00.721Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4167,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T08:49:05.591Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4841,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:03:59.265Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4841,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:04:03.781Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4936,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:06:41.279Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4936,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:06:44.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5011,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:07:38.134Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5011,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:07:41.219Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5107,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:09:50.093Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5107,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:09:53.255Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5185,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:10:32.598Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5185,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:10:35.806Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5325,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:14:13.397Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5325,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:14:16.527Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5425,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:16:02.224Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5425,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:16:05.386Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5500,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:16:52.920Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5500,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:16:56.105Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5592,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:17:46.686Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5592,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:17:49.861Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5684,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:18:52.394Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5684,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:18:55.557Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5758,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:19:16.472Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5758,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:19:19.637Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5842,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:20:29.433Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5842,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:20:32.621Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5928,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:21:15.324Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5928,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:21:18.494Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6001,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:22:37.291Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6001,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:22:40.441Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6080,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:23:13.671Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6080,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:23:16.831Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6167,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:25:46.919Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6167,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:25:50.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6278,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:27:35.815Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6278,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:27:39.014Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6371,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:29:46.343Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6371,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:29:49.529Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6454,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:31:32.205Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6454,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:31:35.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6936,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:45:29.157Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6936,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:45:32.351Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7265,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:51:05.229Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7265,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:51:08.450Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7362,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:53:11.477Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7362,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:53:14.682Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7446,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:54:13.391Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7446,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:54:16.496Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7566,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T09:57:40.233Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7566,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T09:57:43.379Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7678,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:00:38.578Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7678,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:00:41.733Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7868,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:05:36.955Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7868,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:05:40.111Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7964,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:06:33.818Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7964,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:06:36.943Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8030,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:07:17.825Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8030,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:07:20.958Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8147,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:09:18.229Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8147,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:09:21.386Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8271,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:11:47.417Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8271,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:11:50.563Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8431,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:23:04.796Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8431,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:23:07.927Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8531,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:25:02.057Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8531,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:25:05.208Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8690,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:28:18.759Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8690,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:28:22.186Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8843,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:34:50.731Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8843,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:34:54.127Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8979,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:37:51.254Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8979,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:37:54.499Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9075,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:39:29.911Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9075,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:39:33.099Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9147,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:40:39.157Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9147,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:40:42.505Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9219,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:41:13.201Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9219,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:41:16.463Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9354,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:43:16.509Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9354,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:43:19.779Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9432,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:43:50.502Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9432,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:43:53.781Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9518,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:45:34.805Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9518,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:45:38.099Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9651,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:49:25.323Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9651,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:49:28.535Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9835,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:51:41.013Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9835,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:51:44.179Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9905,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:52:08.384Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9905,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:52:11.559Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10016,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:53:03.589Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10016,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:53:06.773Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10186,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T10:59:40.047Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10186,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T10:59:43.209Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10316,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T11:02:16.967Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10316,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T11:02:20.174Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10409,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T11:04:27.950Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10409,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'it',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T11:04:31.199Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4418,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T14:27:09.564Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4418,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T14:27:18.146Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5652,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T14:56:24.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5652,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T14:56:32.312Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5766,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T14:57:59.550Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5766,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T14:58:05.694Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5930,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:02:24.334Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5930,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T15:02:29.481Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6064,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:07:19.077Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6230,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:14:41.514Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6290,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:15:39.668Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6595,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:16:48.611Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6595,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T15:16:52.325Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7408,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:25:51.251Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7408,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T15:25:55.811Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7601,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-04T15:29:57.861Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7601,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-04T15:30:02.473Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4422,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:22:51.590Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4422,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:23:07.349Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4530,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:24:50.210Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4530,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:24:54.378Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4671,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:27:28.789Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4671,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:27:37.170Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4809,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:29:29.526Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4809,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:29:36.390Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5487,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:45:35.061Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5487,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:45:44.350Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5630,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-05T18:49:30.822Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5630,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-05T18:49:35.417Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4980,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T17:07:57.183Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4980,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T17:08:03.844Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6430,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T18:03:04.536Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6430,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T18:03:13.435Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6544,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T18:05:03.446Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6544,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T18:05:10.175Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6609,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T18:05:51.658Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6609,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T18:05:56.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6690,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T18:06:45.402Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6690,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T18:06:49.915Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7794,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T18:59:38.028Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7794,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T18:59:47.260Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8043,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:02:00.685Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8043,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:02:05.817Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8281,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:06:21.786Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8281,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:06:33.353Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8356,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:07:05.755Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8356,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:07:11.986Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8436,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:07:35.254Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8436,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:07:39.639Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8530,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:08:29.696Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8530,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:08:34.402Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8739,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:09:03.509Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8739,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:09:09.724Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8896,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:10:56.680Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8896,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:11:06.978Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8975,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:11:33.599Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8975,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:11:38.109Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9057,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:12:31.870Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9057,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:12:36.829Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3878,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:31:44.263Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3878,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:31:51.081Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4441,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-07T19:58:08.692Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4441,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-07T19:58:13.649Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15171,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:23:48.678Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15171,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:23:56.293Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15434,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:27:14.206Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15434,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:27:18.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16009,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:32:54.430Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16009,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:33:03.475Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16443,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:45:46.405Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16443,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:45:53.545Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16538,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:46:48.326Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16538,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:46:52.660Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16619,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T06:47:29.918Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16619,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T06:47:34.819Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17133,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T07:01:37.459Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17133,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T07:01:43.460Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10288,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T07:58:05.337Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10288,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T07:58:16.422Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10968,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:16:24.974Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10968,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:16:29.290Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11254,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:25:29.575Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11254,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:25:34.427Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11608,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:33:14.455Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11608,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:33:19.284Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11754,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:40:02.518Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11754,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:40:07.217Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11865,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:42:11.274Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11865,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:42:15.685Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11945,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:43:17.145Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11945,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:43:21.603Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12125,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:48:29.987Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12125,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:48:34.436Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12356,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T08:55:38.498Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12356,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T08:55:43.507Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12545,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:00:07.520Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12545,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:00:11.809Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12655,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:01:30.010Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12655,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:01:34.759Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12765,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:03:55.327Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12765,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:03:59.969Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12930,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:07:04.054Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12930,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:07:08.684Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12983,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:07:23.792Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12983,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:07:28.274Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13176,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:11:55.471Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13176,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:12:00.218Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13292,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:15:35.177Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13292,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:15:40.278Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13579,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:25:31.980Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13579,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:25:37.270Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13790,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:32:18.355Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13790,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:32:23.171Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13871,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:33:07.152Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13871,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:33:11.303Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13948,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:33:35.349Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13948,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:33:39.365Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14042,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:35:08.227Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14042,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:35:14.285Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14187,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:37:39.016Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14187,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:37:43.890Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14362,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:43:52.070Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14362,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:43:56.313Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14522,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:46:28.819Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14522,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:46:34.113Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14601,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T09:47:16.289Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14601,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T09:47:20.834Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15060,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:15:06.665Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15060,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:15:11.684Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15727,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:24:41.782Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15727,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:24:46.758Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15946,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:33:20.086Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15946,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:33:25.301Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16057,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:35:20.718Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16057,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:35:28.294Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16234,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:39:00.809Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16234,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:39:05.499Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16321,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:39:42.644Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16321,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:39:47.351Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16446,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:44:52.813Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16446,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:44:57.728Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16621,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T10:46:29.388Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16621,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T10:46:44.562Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5742,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T14:58:46.491Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5742,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T14:58:56.734Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5898,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:01:58.619Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5898,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:02:04.390Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6060,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:07:46.747Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6060,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:07:52.342Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7021,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:17:00.026Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7021,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:17:07.128Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7102,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:18:05.029Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7102,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:18:09.741Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7197,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:19:44.165Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7197,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:19:49.528Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7283,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:22:19.286Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7283,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:22:23.126Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7443,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:24:22.649Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7443,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:24:27.838Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7548,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:25:26.190Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7548,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:25:30.504Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7820,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:38:14.886Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7820,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:38:21.820Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8174,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:52:09.458Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8174,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:52:19.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8249,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:53:03.335Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8249,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:53:14.168Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8342,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T15:54:11.561Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8342,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T15:54:27.044Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9137,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T16:26:57.522Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9137,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T16:27:08.493Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9688,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T16:53:35.653Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9688,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T16:53:46.734Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9768,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T16:54:44.530Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9768,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T16:54:54.213Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9864,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T16:57:00.711Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9864,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T16:57:10.432Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9962,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T16:58:57.455Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9962,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T16:59:03.585Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10642,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:38:02.931Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10642,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:38:13.935Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10720,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:38:27.557Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10720,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:38:32.544Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10869,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:41:44.510Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10869,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:41:49.370Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10983,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:43:20.982Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10983,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:43:26.119Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11086,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:45:12.417Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11086,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:45:17.014Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11215,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:49:49.334Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11215,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:49:54.316Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11315,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:51:43.138Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11315,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:51:47.976Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11418,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:53:00.058Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11418,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:53:04.778Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11490,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-08T17:53:52.487Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11490,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-08T17:53:57.926Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4486,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T14:48:32.861Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4486,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T14:48:41.611Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4600,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T14:51:24.512Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4600,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T14:51:29.244Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4760,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T14:53:49.603Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4760,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T14:53:54.658Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5211,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T15:31:17.649Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5211,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T15:31:22.698Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5294,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T15:32:31.607Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5294,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T15:32:35.250Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6150,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T15:56:46.738Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6150,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T15:56:56.832Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6322,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:01:36.306Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6322,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:01:43.471Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6501,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:04:10.872Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6501,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:04:15.218Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6623,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:05:08.782Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6623,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:05:13.262Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6794,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:14:12.272Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6794,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:14:26.589Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6940,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:18:10.133Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6940,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:18:17.889Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7130,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:21:32.310Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7130,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:21:37.502Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7348,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:32:00.396Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7348,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:32:10.112Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7426,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:32:52.895Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7426,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:32:57.218Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7532,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:34:35.999Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7532,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:34:40.231Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7632,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:35:45.728Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7632,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:35:50.583Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8116,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:50:09.181Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8116,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:50:22.453Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8248,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T16:54:22.975Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8248,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T16:54:29.434Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8529,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-09T17:15:22.250Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8529,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-09T17:15:33.276Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4272,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T05:45:55.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4272,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T05:46:21.717Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5258,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:05:05.493Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5258,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:05:10.240Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5346,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:06:42.212Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5346,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:06:46.586Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5419,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:07:33.272Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5419,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:07:37.274Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6563,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:41:32.871Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6563,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:41:40.312Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6677,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:46:15.611Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6677,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:46:20.012Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6823,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:51:20.110Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6823,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:51:24.517Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:52:34.539Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:52:38.765Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7002,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:54:19.985Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7002,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:54:24.235Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7080,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:55:08.098Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7080,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:55:12.262Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7174,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:56:40.164Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7174,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:56:45.341Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7230,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T06:56:54.479Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7230,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T06:56:58.966Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8409,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T07:40:08.807Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8409,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T07:40:18.131Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8511,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T07:41:25.410Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8511,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T07:41:32.740Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8604,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T07:42:13.696Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8604,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T07:42:20.601Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8701,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T07:43:21.107Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8701,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T07:43:27.160Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8837,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T07:51:33.366Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8837,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T07:51:43.089Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2794,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T08:19:46.731Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2794,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T08:20:25.394Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3599,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T08:23:42.119Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3599,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T08:23:46.320Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3691,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T08:24:28.858Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3691,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T08:24:33.221Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4434,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T08:34:49.741Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4434,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T08:34:58.085Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4863,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T08:56:07.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4863,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T08:56:27.167Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6065,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T09:54:18.286Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6065,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T09:54:27.986Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6159,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T09:55:43.929Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6159,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T09:55:48.572Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9199,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T12:43:01.985Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9199,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T12:43:11.291Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9352,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T12:45:40.027Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9352,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T12:45:45.509Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9461,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T12:46:55.741Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9461,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T12:46:59.950Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9558,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T12:48:24.866Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9558,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T12:48:29.141Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10074,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T13:45:20.457Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10074,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T13:45:25.404Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11024,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T14:09:19.576Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11024,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T14:09:29.244Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11504,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T14:20:06.907Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11504,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T14:20:18.470Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2578,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T16:22:16.143Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2578,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T16:22:47.827Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3380,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T16:26:37.260Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3380,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T16:26:45.034Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4601,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T16:58:20.993Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4601,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T16:58:31.047Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4682,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-10T16:59:51.847Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4682,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-10T16:59:59.728Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6517,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T14:27:04.356Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6517,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T14:27:14.389Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2844,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T14:36:37.150Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2844,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T14:37:13.960Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4191,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T14:52:45.093Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4191,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T14:52:56.363Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2748,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T15:03:32.374Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2748,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T15:04:02.438Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3331,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T15:06:24.267Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3331,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T15:06:28.448Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3461,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T15:08:42.290Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3461,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T15:08:46.921Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3568,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T15:11:06.369Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3568,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T15:11:11.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4681,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T15:56:07.175Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4681,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T15:56:19.496Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2996,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:05:26.969Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2996,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:06:04.464Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3632,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:20:40.026Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3632,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:20:56.520Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3786,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:22:35.854Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3786,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:22:40.687Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3901,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:24:18.985Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3901,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:24:23.713Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3980,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:25:55.528Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3980,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:25:59.526Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4050,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:26:24.443Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4050,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:26:28.297Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4189,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:28:18.590Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4189,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:28:23.929Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4299,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:29:39.201Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4299,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:29:45.811Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4378,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:30:35.788Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4378,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:30:40.500Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4490,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:31:12.706Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4490,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:31:16.939Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4606,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:33:18.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4606,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:33:22.894Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4963,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:41:27.989Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4963,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:41:33.296Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5098,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:42:49.715Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5098,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:42:56.149Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5226,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:44:12.961Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5226,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:44:17.970Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5405,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:46:51.350Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5405,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:46:55.997Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5933,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T16:59:38.791Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5933,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T16:59:44.506Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6519,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T17:05:45.835Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6519,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T17:05:56.122Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6595,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T17:06:36.515Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6595,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T17:06:46.396Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4060,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T17:21:56.099Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4060,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T17:22:02.850Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4552,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T17:26:29.719Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4552,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T17:26:36.012Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5752,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T17:51:38.584Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5752,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T17:51:44.321Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6350,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T18:16:00.160Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6350,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        genSaltForPassword: [Function],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T18:16:12.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6838,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T18:44:36.295Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6838,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T18:44:47.395Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6948,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T18:45:37.717Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6948,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T18:45:42.382Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8618,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T19:22:54.927Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8618,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T19:23:06.573Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8733,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T19:24:39.103Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8733,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T19:24:43.564Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8817,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T19:25:24.421Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8817,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T19:25:28.497Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8914,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-11T19:26:29.275Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8914,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-11T19:26:33.716Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":3209,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T14:02:56.283Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4173,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T14:08:57.644Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4436,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T14:14:38.493Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4436,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T14:14:42.174Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5157,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T14:47:19.299Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5157,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T14:47:22.368Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5688,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T15:04:24.005Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5688,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T15:04:27.665Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5765,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T15:04:57.855Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5765,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T15:05:01.562Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5949,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T15:09:50.108Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5949,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T15:09:53.841Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6169,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T15:15:58.106Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6169,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T15:16:02.020Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6372,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T15:20:48.236Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6372,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T15:20:51.945Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8471,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:09:40.606Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8471,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:09:45.559Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9110,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:34:04.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9110,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:34:10.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9291,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:37:17.232Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9291,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:37:20.617Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9553,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:45:43.320Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9553,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelancer',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:45:46.645Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9651,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:46:29.568Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9651,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:46:33.004Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9732,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:47:32.206Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9732,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:47:35.523Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9822,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:48:48.114Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9822,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:48:51.440Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9927,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T16:51:45.030Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9927,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T16:51:48.477Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10272,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:06:17.313Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10272,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:06:20.662Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10398,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:08:26.948Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10398,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:08:30.939Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10676,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:23:02.701Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10676,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:23:06.738Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10766,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:23:46.395Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10766,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:23:50.267Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11242,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:35:15.837Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11242,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:35:20.067Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11710,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T17:46:53.916Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11710,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T17:47:03.088Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12631,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:08:24.265Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12631,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:08:31.749Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12855,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:15:08.305Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12855,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:15:12.578Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12964,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:16:38.008Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12964,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:16:41.838Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13053,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:17:18.552Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13053,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:17:22.337Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13324,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:19:43.237Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13324,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:19:47.793Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13571,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:23:02.734Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13571,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:23:07.857Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13707,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:26:22.028Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13707,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:26:25.833Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13822,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:26:51.750Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13822,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:26:55.803Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13948,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:28:17.416Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13948,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:28:21.536Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14164,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:31:30.479Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14164,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:31:34.962Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14363,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:35:32.146Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14363,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:35:35.522Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14552,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:39:33.132Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14552,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:39:37.657Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14647,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:42:05.751Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14647,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:42:11.626Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14730,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:42:44.706Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14730,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:42:48.032Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14826,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T18:44:02.446Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14826,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T18:44:05.851Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15423,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T19:07:02.914Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15423,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T19:07:06.139Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15641,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T19:09:10.999Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15641,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T19:09:16.574Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16493,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T19:35:07.146Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16493,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T19:35:14.667Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17061,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-12T19:50:32.249Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17061,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-12T19:50:37.413Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6164,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:10:34.353Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6513,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:16:07.638Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6513,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:16:10.312Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7079,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:25:22.687Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7079,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:25:27.437Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7335,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:31:39.662Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7335,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:31:43.407Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7437,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:33:07.921Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7437,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:33:11.501Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7575,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:34:24.796Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7575,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:34:28.464Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7706,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-16T13:42:52.606Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7706,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-16T13:42:56.097Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9637,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T03:57:52.560Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9637,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T03:57:56.070Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9905,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:04:28.988Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9905,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:04:32.537Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10091,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:07:25.667Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10091,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:07:29.183Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10257,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:11:00.060Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10257,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:11:04.374Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10344,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:12:14.488Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10344,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:12:17.993Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10456,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:13:49.840Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10456,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:13:53.568Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10576,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:15:41.842Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10576,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:15:44.753Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10663,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:16:46.710Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10663,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:16:49.385Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10760,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:17:49.881Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10760,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:17:53.405Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10889,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:19:13.139Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10889,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:19:16.567Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11126,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:22:16.865Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11126,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'freelance',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:22:20.659Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":11979,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:37:17.013Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12044,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:37:40.516Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12107,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:37:58.044Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12107,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:38:01.664Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12298,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:42:57.521Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12298,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:43:02.066Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12409,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:44:01.801Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12409,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:44:06.279Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12497,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:44:50.517Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12497,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:44:58.698Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12708,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T04:50:25.858Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":12708,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T04:50:30.601Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13331,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:12:04.843Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13331,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:12:14.910Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13412,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:13:37.955Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13412,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:13:46.355Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13518,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:15:24.553Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13518,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:15:32.547Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13625,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:17:02.247Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13625,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:17:08.705Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13718,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:17:32.248Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13718,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:17:37.276Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13835,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:18:25.628Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13835,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:18:30.103Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13927,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:19:20.348Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13927,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:19:28.903Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13979,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:19:38.083Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":13979,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:19:42.711Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14104,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:21:41.022Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14104,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:21:46.203Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14199,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:23:44.264Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14199,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:23:48.976Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14323,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:24:55.068Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14323,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:24:59.635Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14682,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:55:16.853Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14682,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:55:21.648Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14758,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:55:46.282Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14758,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:55:51.448Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14892,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:57:21.848Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14892,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:57:30.874Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14977,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T05:58:36.121Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":14977,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T05:58:40.404Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15088,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:00:52.015Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15088,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:00:56.801Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15411,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:06:41.014Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15411,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:06:46.298Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15874,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:18:23.310Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":15874,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:18:28.450Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16019,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:20:11.868Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16019,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:20:16.890Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16123,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:21:07.543Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16123,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:21:11.987Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16253,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:22:27.467Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16253,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:22:32.060Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16322,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:22:56.269Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16322,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:23:01.141Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16423,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:24:17.983Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16423,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:24:22.881Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16505,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:25:27.762Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16505,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:25:32.320Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16577,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:26:10.902Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16577,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:26:15.703Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16643,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:26:44.312Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16643,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:26:48.781Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16966,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:32:02.632Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":16966,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:32:07.766Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17028,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:32:24.801Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17028,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:32:29.366Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17341,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:42:22.096Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17341,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:42:27.192Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17408,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:42:53.571Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17408,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:42:58.021Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17515,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:44:03.944Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17515,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:44:08.877Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17640,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:46:55.631Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17640,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:47:00.091Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17723,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:47:43.968Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17723,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:47:48.531Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17797,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:48:58.812Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17797,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:49:03.279Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17877,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:50:21.560Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":17877,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:50:26.024Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18006,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:51:34.696Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18006,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:51:39.071Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18085,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:52:22.631Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18085,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:52:26.957Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18211,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:53:40.690Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18211,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:53:45.088Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18316,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:55:42.481Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18316,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:55:46.946Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18404,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:56:17.576Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18404,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:56:21.873Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18542,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:58:28.301Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18542,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:58:32.936Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18606,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:58:49.740Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18606,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:58:54.240Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18697,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T06:59:46.608Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18697,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T06:59:51.416Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18816,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:00:45.263Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18816,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:00:49.767Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18896,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:01:31.322Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18896,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:01:35.628Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18995,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:02:30.925Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":18995,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:02:35.641Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19102,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:03:14.283Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19102,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:03:18.651Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19588,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:07:28.077Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19588,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:07:35.194Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19657,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:08:04.195Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19657,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:08:08.688Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19742,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:08:38.349Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19742,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:08:42.768Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19811,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:09:02.658Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19811,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:09:07.252Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20315,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T07:55:43.148Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20315,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T07:55:48.332Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20594,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T08:07:09.394Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20594,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T08:07:13.483Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20709,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T08:10:29.857Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20709,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T08:10:34.741Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20797,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T08:11:37.357Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":20797,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T08:11:42.392Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22181,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:11:14.702Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22181,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:11:24.432Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22297,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:13:46.011Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22297,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:13:50.582Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22868,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:23:14.549Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22868,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:23:19.900Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23264,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:27:59.361Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23264,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:28:04.473Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23368,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:29:55.156Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23368,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:30:00.796Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23959,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T09:55:32.341Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23959,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T09:55:37.101Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24162,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:01:53.835Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24162,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:01:58.943Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24337,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:05:16.706Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24337,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:05:21.288Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24434,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:05:57.929Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24434,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:06:02.351Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24534,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:06:56.068Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24534,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:07:00.715Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24631,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:07:46.757Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24631,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:07:51.331Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24717,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:08:38.048Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24717,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:08:42.301Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24800,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:09:43.074Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24800,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:09:47.219Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24895,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:10:36.660Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24895,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:10:41.598Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25301,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:26:51.206Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25301,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:26:56.504Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25444,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:30:52.747Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25444,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:30:57.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25549,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:31:48.102Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25549,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:31:52.503Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25622,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:32:15.752Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25622,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:32:19.939Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25714,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:33:33.744Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25714,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:33:38.074Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25790,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:34:04.940Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25790,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:34:09.313Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25889,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:34:50.575Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":25889,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:34:55.290Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26037,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:36:31.896Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26037,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:36:38.004Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26127,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:37:40.663Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26127,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:37:44.995Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26217,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:38:27.767Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26217,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:38:32.359Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26301,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:39:46.414Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26301,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:39:50.946Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26378,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:40:22.909Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26378,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:40:27.369Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26560,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:46:20.249Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26560,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:46:27.313Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26761,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:48:43.777Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26761,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:48:55.162Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26861,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:50:04.672Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26861,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:50:09.214Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26969,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:50:50.791Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":26969,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:51:00.731Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27071,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:52:13.304Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27071,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:52:17.834Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27302,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:56:50.091Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27302,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:56:55.146Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27409,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T10:58:35.259Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27409,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T10:58:39.823Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27612,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T11:05:14.613Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":27612,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T11:05:19.439Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":28486,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T12:05:12.439Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":28486,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T12:05:18.092Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29019,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T12:19:35.684Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29019,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T12:19:41.558Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29713,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T12:49:42.952Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29713,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T12:49:50.307Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29979,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T13:00:06.507Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":29979,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T13:00:13.836Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":30469,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T13:09:05.187Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":30469,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T13:09:10.088Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":31105,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T13:28:37.676Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":31105,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T13:28:48.581Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2077,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T15:54:19.033Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2077,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T15:54:26.853Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2235,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T15:56:19.546Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2235,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T15:56:24.171Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2325,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T15:59:28.612Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2325,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T15:59:33.321Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2497,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T16:00:42.095Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2497,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T16:00:46.522Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5084,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T17:54:53.461Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5084,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T17:55:02.666Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6029,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:24:05.782Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6029,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:24:10.139Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6131,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:25:03.536Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6131,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:25:10.858Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6231,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:26:10.164Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6231,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:26:14.578Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6333,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:28:01.240Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6333,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:28:05.665Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:30:36.610Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6439,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:30:41.525Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6532,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:31:22.698Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6532,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:31:26.823Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6897,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:33:14.825Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6897,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:33:19.434Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6974,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:34:22.621Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6974,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:34:27.038Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7106,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:37:27.431Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7106,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:37:32.298Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7171,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:37:46.775Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7171,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:37:50.905Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7339,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:41:59.972Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7339,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:42:04.560Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7423,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:43:12.999Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7423,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:43:17.362Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7559,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:45:18.544Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7559,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:45:23.653Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7654,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:45:51.879Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7654,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:45:56.189Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7841,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-17T18:50:05.184Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7841,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-17T18:50:09.713Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T14:27:38.566Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6377,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T14:27:51.590Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7389,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T14:32:39.457Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7389,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T14:32:48.249Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7497,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T14:34:58.168Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7497,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T14:35:03.510Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4566,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:13:12.007Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4566,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:13:21.919Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5122,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:16:31.820Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":5122,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:16:40.361Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6647,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:49:08.420Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6647,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:49:18.798Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6724,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:49:48.567Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6724,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:49:53.296Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6811,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:50:37.892Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6811,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:50:42.367Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6887,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-26T15:51:09.189Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6887,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-26T15:51:13.905Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7646,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T15:37:40.297Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7646,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T15:37:48.305Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8033,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:13:36.915Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8033,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:13:41.167Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8164,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:15:16.627Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8164,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:15:21.224Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8240,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:16:57.074Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8240,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:17:01.664Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8468,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:23:16.856Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8468,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:23:21.585Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8552,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:24:18.382Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8552,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:24:23.122Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8659,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:25:26.944Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8659,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:25:31.843Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9235,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:28:30.188Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9235,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:28:38.562Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9314,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:29:03.502Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9314,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:29:08.334Z","v":0}
