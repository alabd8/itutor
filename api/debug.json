{"name":"itutor-app-debug","hostname":"ceo","pid":23454,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T20:23:38.890Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23454,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T20:23:44.658Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23831,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T20:42:19.287Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23831,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T20:42:26.491Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24043,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T20:49:37.353Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24043,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T20:49:47.944Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24183,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T20:52:29.172Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24183,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T20:52:34.249Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24771,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T21:08:28.607Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24771,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T21:08:38.239Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":26588,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T22:29:05.791Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":26588,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T22:29:11.846Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27171,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:03:35.932Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27171,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:03:41.024Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27358,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:13:01.397Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27358,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:13:06.046Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27448,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:14:04.207Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27448,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:14:08.410Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27735,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:23:34.274Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27735,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:23:39.898Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27839,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:24:59.702Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27839,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:25:04.072Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27934,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:25:46.152Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27934,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:25:51.379Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28051,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:27:19.998Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28051,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:27:25.280Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28135,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:27:46.932Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28135,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:27:51.084Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28254,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:31:46.781Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28254,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:31:50.906Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28377,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:33:21.811Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28377,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:33:26.853Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28583,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:39:01.499Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28583,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:39:07.028Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28692,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:41:05.761Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28692,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:41:11.142Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28771,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:41:31.761Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28771,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:41:36.532Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28872,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-06T23:42:42.201Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28872,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-06T23:42:47.494Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":20738,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:15:51.309Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":20882,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:19:44.771Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":20882,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:19:48.633Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":21824,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:46:09.092Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":21824,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:46:12.801Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22114,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:49:20.905Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22114,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:49:24.856Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22300,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:50:08.619Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22300,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:50:12.365Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22361,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:50:20.150Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22361,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:50:23.504Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22741,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:56:48.616Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22741,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:56:52.656Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22882,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:58:32.859Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22882,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:58:36.901Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22957,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T13:58:58.851Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":22957,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T13:59:02.606Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23131,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:00:22.208Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23131,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:00:31.181Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23204,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:01:03.151Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23204,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:01:06.525Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23260,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:01:17.355Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23260,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:01:20.859Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23335,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:01:39.792Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23335,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:01:43.600Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23560,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:03:01.071Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23560,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:03:04.639Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23766,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:06:54.925Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":23881,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:08:43.629Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24499,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:30:44.999Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24499,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:30:50.096Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24603,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:31:24.792Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":24651,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:31:35.819Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":25192,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T14:57:00.041Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":25192,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T14:57:04.333Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":25506,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T15:03:38.149Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":25664,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T15:08:26.769Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":25664,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T15:08:30.951Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":26970,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T16:16:39.500Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":27115,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T16:20:37.378Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28623,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:35:05.893Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28686,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:35:25.406Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28686,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:35:29.752Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28762,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:35:57.973Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":28762,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:36:02.316Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":29028,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:39:41.177Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":29028,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:39:45.218Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":29952,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:50:17.548Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":29952,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:50:26.944Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":30145,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:53:14.883Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":30145,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:53:20.634Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":30289,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:55:13.943Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":30371,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T17:55:53.498Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":30371,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T17:55:57.262Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31006,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T18:08:14.364Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31006,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T18:08:22.854Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31124,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T18:09:32.219Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31124,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T18:09:36.996Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31218,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T18:11:36.665Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31218,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T18:11:41.623Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31562,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-07T18:16:40.977Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":31562,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-07T18:16:47.925Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T09:58:54.677Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5439,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T09:59:01.861Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5556,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:00:53.352Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5556,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:00:58.283Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5713,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:01:54.402Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":5713,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:01:58.493Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6433,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:14:40.362Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6433,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:14:48.854Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6566,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:16:42.518Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6566,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:16:49.482Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6668,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:17:52.386Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6668,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:17:57.271Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6771,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:19:33.696Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6771,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:19:42.335Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6947,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:22:01.831Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":6947,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:22:07.132Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7269,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:31:13.388Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7269,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:31:18.550Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7577,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:41:34.376Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7577,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:41:40.018Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7753,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T10:45:50.888Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":7753,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T10:45:54.448Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8193,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:01:19.140Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8193,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:01:25.239Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8273,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:01:44.535Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8273,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:01:48.344Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:03:11.454Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8439,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:03:21.127Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8528,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:05:29.538Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8528,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:05:34.868Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8617,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:06:12.423Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8617,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:06:17.472Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8708,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:07:20.704Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8708,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:07:26.082Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8964,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:10:31.756Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":8964,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:10:36.961Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9178,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:14:39.106Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9178,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:14:44.271Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9270,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:15:14.618Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9270,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:15:19.699Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9375,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:16:04.713Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9375,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:16:09.669Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9475,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:17:34.163Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9475,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:17:39.475Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9547,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:18:33.712Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9547,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:18:38.767Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9651,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:20:36.007Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9651,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:20:55.884Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9735,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:21:46.730Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9735,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:21:50.978Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9942,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:24:17.569Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":9942,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:24:22.427Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10054,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:25:41.342Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10054,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:25:45.992Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10171,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:27:00.274Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10171,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:27:05.560Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10340,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:30:36.755Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10340,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:30:40.699Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10711,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:45:39.729Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10711,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:45:44.481Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10872,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:50:39.365Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10872,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:50:45.029Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10962,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:53:58.849Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":10962,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:54:02.965Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11059,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:54:49.926Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11059,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:54:54.788Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11210,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T11:57:52.413Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11210,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T11:57:57.422Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11415,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:03:04.906Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11415,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:03:10.198Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11496,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:03:51.112Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11496,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:03:54.846Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11598,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:05:21.452Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11598,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:05:26.569Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11784,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:07:56.773Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11784,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:08:01.945Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11948,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:10:27.013Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":11948,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:10:31.965Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12050,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:11:37.197Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12050,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:11:42.214Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12273,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:16:27.104Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12273,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:16:32.321Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12439,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:21:29.094Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12439,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:21:34.303Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12523,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:22:03.977Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12523,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:22:08.912Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12613,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:22:56.372Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12613,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:23:01.346Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12687,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:23:47.100Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12687,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:23:52.241Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12787,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:24:38.371Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12787,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:24:43.336Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12962,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:28:29.314Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":12962,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:28:34.375Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13127,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:31:30.373Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13127,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:31:35.713Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13306,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:35:17.631Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13306,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:35:21.819Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13792,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:51:20.448Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13792,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:51:27.869Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13910,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:53:23.277Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":13910,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:53:28.599Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14123,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:58:41.459Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14123,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:58:45.432Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14177,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T12:59:34.095Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14177,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T12:59:37.687Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14524,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-04-08T13:13:56.635Z","v":0}
{"name":"itutor-app-debug","hostname":"ceo","pid":14524,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       '$internalEmitter': [EventEmitter],\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds229826.mlab.com',\n       port: 29826,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        events: [EventEmitter],\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        _middleware: [Kareem],\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise],\n        '$caught': true,\n        [Symbol(mongoose#Model)]: true } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        '$id': 1,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: {},\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 8,\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$timestamps': [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        '$id': 9,\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true,\n        [Symbol(Mongoose.helpers.setParentPointers)]: true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  Schema:\n   { [Function: Schema]\n     reserved:\n      [Object: null prototype] {\n        _posts: 1,\n        _pres: 1,\n        populated: 1,\n        remove: 1,\n        validate: 1,\n        toObject: 1,\n        schema: 1,\n        save: 1,\n        modelName: 1,\n        get: 1,\n        isNew: 1,\n        isModified: 1,\n        init: 1,\n        errors: 1,\n        db: 1,\n        collection: 1,\n        removeListener: 1,\n        listeners: 1,\n        once: 1,\n        on: 1,\n        emit: 1,\n        prototype: 1 },\n     Types:\n      { String: [Function],\n        Number: [Function],\n        Boolean: [Function],\n        DocumentArray: [Function],\n        Embedded: [Function: Embedded],\n        Array: [Function],\n        Buffer: [Function],\n        Date: [Function],\n        ObjectId: [Function],\n        Mixed: [Function],\n        Decimal: [Function],\n        Decimal128: [Function],\n        Map: [Function: Map],\n        Oid: [Function],\n        Object: [Function],\n        Bool: [Function] },\n     ObjectId:\n      { [Function: ObjectId]\n        schemaName: 'ObjectId',\n        get: [Function],\n        _checkRequired: [Function],\n        _cast: [Function: castObjectId],\n        cast: [Function: cast],\n        checkRequired: [Function] } },\n  model: [Function],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-04-08T13:14:02.130Z","v":0}
