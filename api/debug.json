{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":32538,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:34:54.360Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":32538,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:35:00.117Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":564,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:40:38.940Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":564,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:40:41.567Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":649,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:43:11.036Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":649,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:43:13.096Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":708,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:45:17.923Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":708,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:45:19.980Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1669,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:50:27.461Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1669,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:50:29.550Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1726,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:50:43.610Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":1726,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:50:45.134Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2241,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:54:55.446Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2241,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:54:57.537Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2339,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T16:55:11.377Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2339,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T16:55:12.952Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2411,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-27T17:15:57.797Z","v":0}
{"name":"itutor-app-debug","hostname":"sayidamirxon","pid":2411,"level":20,"msg":"Mongo connected Mongoose {\n  connections:\n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [MongoClient],\n       '$initialConnection': [Promise],\n       db: [Db] } ],\n  models:\n   { user:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     payment:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] },\n     token:\n      { [Function: model]\n        hooks: [Kareem],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [NativeConnection],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Schema],\n        collection: [NativeCollection],\n        Query: [Function],\n        '$__insertMany': [Function],\n        '$init': [Promise] } },\n  modelSchemas:\n   { user:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token:\n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins:\n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-27T17:16:00.049Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6414,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:16:42.116Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6414,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:16:48.074Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6509,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:17:56.001Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6509,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:18:00.384Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6591,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:18:34.855Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6591,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:18:39.379Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6678,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:19:12.401Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6678,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:19:16.862Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6822,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:20:47.172Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6822,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:20:51.987Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:21:55.930Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6909,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:22:00.399Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6985,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:23:12.654Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":6985,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:23:17.409Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7098,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:24:15.891Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7098,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:24:20.614Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7173,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:25:14.979Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7173,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:25:19.682Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7259,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:26:38.225Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7259,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:26:42.613Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7375,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:28:23.125Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7375,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:28:28.207Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7507,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:31:05.418Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7507,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:31:10.210Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7595,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:32:12.824Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7595,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:32:17.263Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8420,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:43:26.808Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8420,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:43:35.803Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8512,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-03-28T12:44:24.878Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":8512,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds155045.mlab.com',\n       port: 55045,\n       user: 'itutor',\n       pass: 'Iamsmart1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        createFieldsForStudent: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     payment: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'payment',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     payment: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-03-28T12:44:29.228Z","v":0}
