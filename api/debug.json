{"name":"itutor-app-debug","hostname":"8codingeek","pid":9236,"level":30,"msg":"hello world","time":"2019-01-13T09:18:43.427Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":9236,"level":20,"msg":"Mongo connected","time":"2019-01-13T09:18:44.598Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10149,"level":30,"msg":"hello world","time":"2019-01-13T09:21:34.797Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":10149,"level":20,"msg":"Mongo connected","time":"2019-01-13T09:21:37.377Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19441,"level":30,"msg":"hello world","time":"2019-01-13T10:16:04.679Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":19852,"level":20,"msg":"hello world","time":"2019-01-13T10:22:30.273Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21736,"level":20,"msg":"hello world","time":"2019-01-13T10:37:12.970Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21878,"level":20,"msg":"hello world","time":"2019-01-13T10:39:12.618Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":21878,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T10:39:13.856Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22142,"level":20,"msg":"hello world","time":"2019-01-13T10:45:33.276Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22142,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T10:45:34.393Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22401,"level":20,"msg":"hello world","time":"2019-01-13T10:49:56.449Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22401,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T10:49:57.649Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22517,"level":20,"msg":"hello world","time":"2019-01-13T10:53:09.520Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22589,"level":20,"msg":"hello world","time":"2019-01-13T10:53:44.551Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22589,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T10:53:45.626Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22791,"level":20,"msg":"hello world","time":"2019-01-13T10:55:55.413Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22791,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T10:55:56.494Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22885,"level":20,"msg":"hello world","time":"2019-01-13T10:56:57.349Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":22946,"level":20,"msg":"hello world","time":"2019-01-13T10:57:46.096Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23262,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-01-13T11:03:43.367Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":23262,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T11:03:46.705Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24366,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-01-13T11:31:06.385Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":24366,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'ds115569.mlab.com',\n       port: 15569,\n       user: 'itutor',\n       pass: 'itutor1',\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-13T11:31:16.974Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4182,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-01-19T07:03:23.604Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4565,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-01-19T07:05:59.523Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4565,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-01-19T07:06:08.039Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2757,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-06T04:08:01.719Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2883,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-06T04:57:53.870Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":2883,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-06T04:58:17.938Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7560,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-10T11:19:32.048Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":7560,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-10T11:19:40.021Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4102,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-10T13:32:23.621Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4246,"level":20,"msg":"DEBUG LOG STARTED","time":"2019-02-10T13:35:05.039Z","v":0}
{"name":"itutor-app-debug","hostname":"8codingeek","pid":4246,"level":20,"msg":"Mongo connected Mongoose {\n  connections: \n   [ NativeConnection {\n       base: [Circular],\n       collections: [Object],\n       models: [Object],\n       config: [Object],\n       replica: false,\n       options: null,\n       otherDbs: [],\n       relatedDbs: {},\n       states: [Object],\n       _readyState: 1,\n       _closeCalled: false,\n       _hasOpened: true,\n       _listening: false,\n       _connectionOptions: [Object],\n       name: 'itutor',\n       host: 'localhost',\n       port: 27017,\n       user: null,\n       pass: null,\n       client: [Object],\n       '$initialConnection': [Object],\n       db: [Object] } ],\n  models: \n   { user: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'user',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     tutor: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'tutor',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     lc: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'lc',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     admin: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'admin',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        createFields: [Array],\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] },\n     token: \n      { [Function: model]\n        hooks: [Object],\n        base: [Circular],\n        modelName: 'token',\n        model: [Function: model],\n        db: [Object],\n        discriminators: undefined,\n        '$appliedMethods': true,\n        '$appliedHooks': true,\n        schema: [Object],\n        collection: [Object],\n        Query: [Object],\n        '$__insertMany': [Function],\n        '$init': [Object] } },\n  modelSchemas: \n   { user: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     tutor: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     lc: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: [Object],\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: [Object],\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [Array],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: [Object],\n        options: [Object],\n        '$globalPluginsApplied': true },\n     admin: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: [Object],\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true },\n     token: \n      Schema {\n        obj: [Object],\n        paths: [Object],\n        aliases: {},\n        subpaths: {},\n        virtuals: [Object],\n        singleNestedPaths: {},\n        nested: {},\n        inherits: {},\n        callQueue: [],\n        _indexes: [],\n        methods: {},\n        methodOptions: {},\n        statics: {},\n        tree: [Object],\n        query: {},\n        childSchemas: [],\n        plugins: [Array],\n        s: [Object],\n        _userProvidedOptions: {},\n        options: [Object],\n        '$globalPluginsApplied': true } },\n  options: { pluralization: true },\n  _pluralize: [Function: pluralize],\n  plugins: \n   [ [ [Function], [Object] ],\n     [ [Function], [Object] ],\n     [ [Object], [Object] ],\n     [ [Function], [Object] ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ],\n     [ [Function], undefined ] ] }","time":"2019-02-10T13:35:07.810Z","v":0}
